#include <iostream>
#include <fstream>
using namespace std;

// Base class
class Booking {
protected:
    string student_name;
    string phone;
    int seat_num;

public:
    virtual void reserve() = 0; // Pure virtual function
    virtual void update() = 0;  // Pure virtual function
    virtual void cancel() = 0;  // Pure virtual function
    virtual void show() = 0;    // Pure virtual function
};

// Derived class
class Bus : public Booking {
    string bus_no, bus_driver_name, arrival_time, departure_time, to, from;
    int bus_seats;

public:
    void menu();
    void install_bus();
    void display_bus();
    void delete_bus();
    void bus_seats_details();
    void reserve() override;    // Overriding virtual function
    void update() override;     // Overriding virtual function
    void cancel() override;     // Overriding virtual function
    void show() override;       // Overriding virtual function
};

// Function to decorate output
void decorate(char c)
{
    for (int i = 0; i < 156; i++)
        cout << c;
    cout << endl;
}

void Bus::menu()
{
    while (1)
    {
        int choice;
        cout << endl;
        decorate('-');
        cout << "\n\t\t\t\t\t\t\t\t SRM BUS RESERVATION SYSTEM    \n";
        decorate('-');

        cout << "\n\n\t\t\t\t\t MAIN MENU";
        cout << "\n\n\t\t\t\t\t 1. INSTALL BUS DETAILS";
        cout << "\n\n\t\t\t\t\t 2. DELETE BUS DETAILS";
        cout << "\n\n\t\t\t\t\t 3. DISPLAY BUSES";
        cout << "\n\n\t\t\t\t\t 4. AVAIABLE SEATS DETAILS";
        cout << "\n\n\t\t\t\t\t 5. RESERVATION";
        cout << "\n\n\t\t\t\t\t 6. UPDATE BOOKING RECORD";
        cout << "\n\n\t\t\t\t\t 7. DELETE BOOKING RECORD";
        cout << "\n\n\t\t\t\t\t 8. SHOW ALL BOOKING RECORD";
        cout << "\n\n\t\t\t\t\t 9. EXIT";
        cout << "\n\n ENTER YOUR CHOICE : ";
        cin >> choice;

        switch (choice)
        {
        case 1:
            install_bus();
            break;
        case 2:
            delete_bus();
            break;
        case 3:
            display_bus();
            break;
        case 4:
            bus_seats_details();
            break;
        case 5:
            reserve();
            break;
        case 6:
            update();
            break;
        case 7:
            cancel();
            break;
        case 8:
            show();
            break;
        case 9:
            exit(0);

        default:
            cout << "Invalid choice";
        }
    }
}

void Bus::install_bus()
{
    // Implementation remains the same
}

void Bus::delete_bus()
{
    // Implementation remains the same
}

void Bus::display_bus()
{
    // Implementation remains the same
}

void Bus::bus_seats_details()
{
    // Implementation remains the same
}

void Bus::reserve()
{
    fstream file;
    file.open("bus.txt", ios::in);
    string test_bus_num, test_bus_num_for_seats;
    int found = 0, seat_num, seats, count = 0, test_bus_seats;

    if (!file)
    {
        cout << "\n\n Please install the bus details to do reservation.";
    }
    else
    {
        cout << "\n\n Enter the bus number : ";
        cin >> test_bus_num;

        file.close();
        file.open("seat.txt", ios::in);

        if (file)
        {
            file >> test_bus_num_for_seats >> test_bus_seats;
            while (!file.eof())
            {
                if (test_bus_num == test_bus_num_for_seats)
                    count++;
                file >> test_bus_num_for_seats >> test_bus_seats;
            }
            file.close();
        }

        file.open("bus.txt", ios::in);
        file >> bus_no >> bus_driver_name >> arrival_time >> departure_time >> from >> to >> bus_seats;
        while (!file.eof())
        {
            if (test_bus_num == bus_no)
            {
                seats = bus_seats;
                found++;
            }
            file >> bus_no >> bus_driver_name >> arrival_time >> departure_time >> from >> to >> bus_seats;
        }
        file.close();

        if (seats - count == 0)
            cout << "\n\n All seats are reserved";
        else if (found == 1)
        {
            cout << "\n\n Enter the Seat number : ";
            cin >> seat_num;

            if (seat_num > seats)
            {
                cout << "\n\n Seat number is Invalid.";
            }
            else
            {
                file.open("seat.txt", ios::in);
                if (!file)
                {
                    file.open("seat.txt", ios::app | ios::out);
                    file << test_bus_num << " " << seat_num << "\n";
                    file.close();
                }
                else
                {
                    file >> test_bus_num_for_seats >> test_bus_seats;
                    while (!file.eof())
                    {
                        if (test_bus_num == test_bus_num_for_seats && seat_num == test_bus_seats)
                        {
                            cout << "\n\n This seat is already reserved";
                            break;
                        }
                        file >> test_bus_num_for_seats >> test_bus_seats;
                    }
                    file.close();

                    file.open("seat.txt", ios::app | ios::out);
                    file << test_bus_num << " " << seat_num << "\n";
                    file.close();
                }

                cout << "\n\n Enter your name : ";
                cin >> student_name;
                cout << "\n\n Enter your phone number : ";
                cin >> phone;

                file.open("student.txt", ios::app | ios::in);
                file << student_name << " " << test_bus_num << " " << phone << " " << seat_num << endl;
                file.close();

                decorate('*');
                cout << "\n\n Booking Information \n";
                decorate('*');
                cout << "\n\n Student Name :          " << student_name;
                cout << "\n\n Phone Number :           " << phone;
                cout << "\n\n Seat number :            " << seat_num;
                cout << "\n\n Booking Successful";
            }
        }
        else
        {
            cout << "\n\n Bus number is Invalid";
        }
    }
}

void Bus::update()
{
    fstream file, file1;
    int reserved_seats, found = 0;
    string name, t_bus_no, phone, t_phone, del_no;

    file.open("student.txt", ios::in);
    if (!file)
    {
        cout << "\n\n Please install the bus details to update.";
    }
    else
    {
        cout << "\n\n Enter your phone number : ";
        cin >> t_phone;

        file >> name >> t_bus_no >> phone >> reserved_seats;
        while (!file.eof())
        {
            if (t_phone == phone)
            {
                file.close();
                file.open("student.txt", ios::in);
                file1.open("student1.txt", ios::out);

                file >> name >> t_bus_no >> phone >> reserved_seats;
                while (!file.eof())
                {
                    if (t_phone == phone)
                    {
                        del_no = t_bus_no;
                    }
                    else
                    {
                        file1 << name << " " << t_bus_no << " " << phone << " " << reserved_seats << endl;
                    }
                    file >> name >> t_bus_no >> phone >> reserved_seats;
                }
                file.close();
                file1.close();

                remove("student.txt");
                rename("student1.txt", "student.txt");

                file.open("seat.txt", ios::in);
                file1.open("seat1.txt", ios::out);

                file >> t_bus_no >> reserved_seats;
                while (!file.eof())
                {
                    if (del_no != t_bus_no)
                    {
                        file1 << t_bus_no << " " << reserved_seats << endl;
                    }
                    file >> t_bus_no >> reserved_seats;
                }
                file.close();
                file1.close();

                remove("seat.txt");
                rename("seat1.txt", "seat.txt");

                reserve();
                cout << "\n\n Updated Reserved Seats";
                found++;
                break;
            }
            file >> name >> t_bus_no >> phone >> reserved_seats;
        }
        if (found == 0)
        {
            cout << "\n\n Phone number is Invalid.";
        }
    }
}

void Bus::cancel()
{
    fstream file, file1;
    string name, phone, bus_no, t_phone, t_bus_no;
    int seat_no;

    file.open("student.txt", ios::in);
    if (!file)
    {
        cout << "\n\n Please install the bus details to cancel.";
    }
    else
    {
        cout << "\n\n Enter your phone number : ";
        cin >> t_phone;

        file >> name >> bus_no >> phone >> seat_no;
        while (!file.eof())
        {
            if (t_phone == phone)
            {
                file.close();
                file.open("student.txt", ios::in);
                file1.open("student1.txt", ios::out);

                file >> name >> bus_no >> phone >> seat_no;
                while (!file.eof())
                {
                    if (t_phone == phone)
                    {
                        t_bus_no = bus_no;
                    }
                    else
                    {
                        file1 << name << " " << bus_no << " " << phone << " " << seat_no << endl;
                    }
                    file >> name >> bus_no >> phone >> seat_no;
                }
                file.close();
                file1.close();

                remove("student.txt");
                rename("student1.txt", "student.txt");

                file.open("seat.txt", ios::in);
                file1.open("seat1.txt", ios::out);

                file >> t_bus_no >> seat_no;
                while (!file.eof())
                {
                    if (t_bus_no != bus_no)
                    {
                        file1 << t_bus_no << " " << seat_no << endl;
                    }
                    file >> t_bus_no >> seat_no;
                }
                file.close();
                file1.close();

                remove("seat.txt");
                rename("seat1.txt", "seat.txt");

                cout << "\n\n Cancellation Successful.";
                break;
            }
            file >> name >> bus_no >> phone >> seat_no;
        }
    }
}

void Bus::show()
{
    fstream file;
    string name, bus_no, phone;
    int seat_no;

    file.open("student.txt", ios::in);
    if (!file)
    {
        cout << "\n\n No reservations found.";
    }
    else
    {
        cout << "\n\n Booking Records :";
        file >> name >> bus_no >> phone >> seat_no;
        while (!file.eof())
        {
            cout << "\n\n Name : " << name;
            cout << "\n\n Bus Number : " << bus_no;
            cout << "\n\n Phone Number : " << phone;
            cout << "\n\n Seat Number : " << seat_no;
            file >> name >> bus_no >> phone >> seat_no;
        }
        file.close();
    }
}

int main()
{
    Bus obj;
    obj.menu();
    return 0;
}
